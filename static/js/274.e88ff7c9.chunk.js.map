{"version":3,"file":"static/js/274.e88ff7c9.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/Styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/Styled.jsx","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/UpdateForm/Styled.jsx","components/UpdateForm/UpdateForm.jsx","Pages/Contacts/Styled.jsx","Pages/Contacts/Contacts.jsx","components/Loader/Styled.jsx","components/Loader/Loader.jsx"],"sourcesContent":["export const itemsSelector = state => state.contacts.items;\nexport const isLoadingSelector = state => state.contacts.isLoading;\nexport const errorSelector = state => state.contacts.error;\nexport const listSelector = state => state.contacts.filter;\nexport const contactUpdateSelector = state => state.contacts.contactUpdate;\nexport const isUpdateSelector = state => state.contacts.isUpdate;\n","import styled from 'styled-components';\n\nexport const FormSt = styled.form`\n  display: flex;\n  align-items: end;\n  gap: 15px;\n  margin-bottom: 25px;\n`;\n\nexport const LabelSt = styled.label`\n  margin-top: 10px;\n`;\n\nexport const InputSt = styled.input`\n  display: block;\n  margin-top: 5px;\n`;\n","import Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { itemsSelector } from 'redux/contacts/selectors';\nimport { useState } from 'react';\nimport { addContactThunk } from 'redux/contacts/operations';\nimport { FormSt, InputSt, LabelSt } from './Styled';\nimport { Button } from '@mui/material';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const items = useSelector(itemsSelector);\n  const dispatch = useDispatch();\n\n  function handleChange(evt) {\n    if (evt.target.name === 'name') setName(evt.target.value);\n    if (evt.target.name === 'number') setNumber(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n\n    const normalizedName = name.toLowerCase();\n\n    if (\n      items.some(el => el.name.toLowerCase() === normalizedName) ||\n      items.some(el => el.phone === number)\n    ) {\n      Notiflix.Notify.failure(`${name} is already in contacts`);\n\n      return;\n    }\n\n    const newContact = {\n      name: name,\n      number: number,\n    };\n\n    dispatch(addContactThunk(newContact)); // üíôüíõ –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –≤ createAsyncThunk –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ backend\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <FormSt onSubmit={handleSubmit}>\n      <LabelSt>\n        Name\n        <InputSt\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          // pattern=\"^[a-zA-Z–∞-—è–ê-–Ø]+(([' -][a-zA-Z–∞-—è–ê-–Ø ])?[a-zA-Z–∞-—è–ê-–Ø]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </LabelSt>\n\n      <LabelSt>\n        Number\n        <InputSt\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </LabelSt>\n\n      <Button variant=\"contained\" size=\"small\" color=\"success\" type=\"submit\">\n        Add contact\n      </Button>\n    </FormSt>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ListSt = styled.ul`\n  display: grid;\n  gap: 5px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const ItemSt = styled.li`\n  margin: 0 auto;\n  width: 600px;\n`;\n\nexport const WrapSt = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const ContactSt = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 60%;\n\n  & p {\n    margin: 0;\n    margin: 0;\n  }\n\n  & :first-child {\n    font-weight: 700;\n  }\n`;\n\nexport const ButtonsSt = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { itemsSelector, listSelector } from 'redux/contacts/selectors';\nimport {\n  deleteContactThunk,\n  fetchContactsThunk,\n} from 'redux/contacts/operations';\nimport { setContactUpdate, setIsUpdate } from 'redux/contacts/slice';\nimport { ButtonsSt, ContactSt, ItemSt, ListSt, WrapSt } from './Styled';\nimport { Button } from '@mui/material';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport UpdateIcon from '@mui/icons-material/Update';\n\nexport function ContactList() {\n  const items = useSelector(itemsSelector);\n  const filter = useSelector(listSelector);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  function getFiltered() {\n    const normalizedFilter = filter.toLowerCase();\n\n    return items.filter(el => el.name.toLowerCase().includes(normalizedFilter));\n  }\n\n  const handleContactUpdate = evt => {\n    const getContactId = evt.target.dataset.id;\n    const getContactUpdate = items.find(el => el.id === getContactId);\n\n    dispatch(setIsUpdate(true));\n    dispatch(setContactUpdate(getContactUpdate)); // –∑–∞–ø–∏—Å–∞–ª –≤ state –∏–∑ items\n  };\n\n  return (\n    <>\n      <ListSt>\n        {getFiltered().map(({ id, name, number }) => (\n          <ItemSt key={id}>\n            <WrapSt>\n              <ContactSt>\n                <p>{name}:</p>\n                <p> {number}</p>\n              </ContactSt>\n\n              <ButtonsSt>\n                <Button\n                  variant=\"outlined\"\n                  color=\"error\"\n                  size=\"small\"\n                  startIcon={<DeleteForeverIcon />}\n                  onClick={() => dispatch(deleteContactThunk(id))}\n                >\n                  Delete\n                </Button>\n\n                <Button\n                  variant=\"outlined\"\n                  startIcon={<UpdateIcon />}\n                  size=\"small\"\n                  color=\"success\"\n                  onClick={handleContactUpdate}\n                  data-id={id}\n                >\n                  update\n                </Button>\n              </ButtonsSt>\n            </WrapSt>\n          </ItemSt>\n        ))}\n      </ListSt>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listSelector } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/slice';\n\nexport function Filter() {\n  const filter = useSelector(listSelector);\n  const dispatch = useDispatch();\n\n  function changeFilter(evt) {\n    dispatch(setFilter(evt.currentTarget.value));\n  }\n\n  return (\n    <label className={css.label}>\n      Find contacts by name\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={changeFilter}\n      />\n    </label>\n  );\n}\n","import styled from 'styled-components';\n\n// export const FormsContactsSt = styled.div`\n//   display: flex;\n// `;\n\nexport const FormSt = styled.form`\n  display: flex;\n  align-items: end;\n  gap: 15px;\n`;\n\nexport const LabelSt = styled.label`\n  margin-top: 10px;\n`;\n\nexport const InputSt = styled.input`\n  margin-top: 5px;\n  display: block;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { patchContactThunk } from 'redux/contacts/operations';\nimport { contactUpdateSelector } from 'redux/contacts/selectors';\nimport { setContactUpdate, setIsUpdate } from 'redux/contacts/slice';\nimport { FormSt, InputSt, LabelSt } from './Styled';\nimport { Button } from '@mui/material';\n\nexport const UpdateForm = () => {\n  const dispatch = useDispatch();\n\n  const contactUpdate = useSelector(contactUpdateSelector);\n\n  // –∑–∞–ø–∏—Å—å –≤ —Å—Ç–µ–π—Ç –∏–∑ –ø–æ–ª—è input\n  const handleChange = evt => {\n    const inputName = evt.target.name;\n    const value = evt.target.value;\n\n    if (inputName === 'name')\n      dispatch(setContactUpdate({ ...contactUpdate, ...{ name: value } }));\n\n    if (inputName === 'number')\n      dispatch(setContactUpdate({ ...contactUpdate, ...{ number: value } }));\n  };\n\n  const handleContactCorrect = evt => {\n    evt.preventDefault();\n\n    dispatch(patchContactThunk(contactUpdate));\n    dispatch(setIsUpdate(false));\n  };\n\n  const { name, number } = contactUpdate;\n\n  return (\n    <>\n      <FormSt onSubmit={handleContactCorrect}>\n        <LabelSt>\n          change Name\n          <InputSt\n            type=\"text\"\n            name=\"name\"\n            placeholder={name}\n            onChange={handleChange}\n          />\n        </LabelSt>\n\n        <LabelSt>\n          change Number\n          <InputSt\n            type=\"tel\"\n            name=\"number\"\n            placeholder={number}\n            onChange={handleChange}\n          />\n        </LabelSt>\n\n        <Button variant=\"contained\" size=\"small\" color=\"success\" type=\"submit\">\n          Correct contact\n        </Button>\n      </FormSt>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FormsContactsSt = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 30px;\n`;\n","import { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { UpdateForm } from 'components/UpdateForm/UpdateForm';\nimport { useSelector } from 'react-redux';\nimport { userSelector } from 'redux/auth/selectors';\nimport {\n  errorSelector,\n  isLoadingSelector,\n  isUpdateSelector,\n} from 'redux/contacts/selectors';\nimport { FormsContactsSt } from './Styled';\n\nconst Contacts = () => {\n  const user = useSelector(userSelector);\n  const isLoading = useSelector(isLoadingSelector);\n  const error = useSelector(errorSelector);\n  const isUpdate = useSelector(isUpdateSelector);\n\n  return (\n    <>\n      {isLoading && !error && <Loader />}\n\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>{`${user.name}, these are your contacts`}</h2>\n      <FormsContactsSt>\n        <Filter />\n        {isUpdate && <UpdateForm />}\n      </FormsContactsSt>\n\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.1);\n  z-index: 1200;\n`;\n","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport { Backdrop } from './Styled';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst loaderRoot = document.querySelector('#loader-root');\n\nexport function Loader() {\n  return createPortal(\n    <Backdrop>\n      <ThreeDots\n        height=\"50\"\n        width=\"50\"\n        radius=\"9\"\n        color=\"gray\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </Backdrop>,\n    loaderRoot\n  );\n}\n"],"names":["itemsSelector","state","contacts","items","isLoadingSelector","isLoading","errorSelector","error","listSelector","filter","contactUpdateSelector","contactUpdate","isUpdateSelector","isUpdate","FormSt","styled","LabelSt","InputSt","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","evt","target","value","onSubmit","preventDefault","normalizedName","toLowerCase","some","el","phone","Notiflix","newContact","addContactThunk","type","onChange","title","required","Button","variant","size","color","ListSt","ItemSt","WrapSt","ContactSt","ButtonsSt","ContactList","useEffect","fetchContactsThunk","handleContactUpdate","getContactId","dataset","id","getContactUpdate","find","setIsUpdate","setContactUpdate","normalizedFilter","includes","getFiltered","map","startIcon","DeleteForever","onClick","deleteContactThunk","Update","Filter","className","css","setFilter","currentTarget","UpdateForm","inputName","patchContactThunk","placeholder","FormsContactsSt","user","userSelector","Loader","Backdrop","loaderRoot","document","querySelector","createPortal","height","width","radius","ariaLabel","wrapperStyle","wrapperClassName","visible"],"sourceRoot":""}