{"version":3,"file":"static/js/564.54f04bee.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/UpdateForm/Styled.jsx","components/UpdateForm/UpdateForm.jsx","Pages/Contacts/Styled.jsx","Pages/Contacts/Contacts.jsx","components/Loader/Styled.jsx","components/Loader/Loader.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","export const itemsSelector = state => state.contacts.items;\nexport const isLoadingSelector = state => state.contacts.isLoading;\nexport const errorSelector = state => state.contacts.error;\nexport const listSelector = state => state.contacts.filter;\nexport const contactUpdateSelector = state => state.contacts.contactUpdate;\nexport const isUpdateSelector = state => state.contacts.isUpdate;\n","import Notiflix from 'notiflix';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { itemsSelector } from 'redux/contacts/selectors';\nimport { useState } from 'react';\nimport { addContactThunk } from 'redux/contacts/operations';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const items = useSelector(itemsSelector);\n  const dispatch = useDispatch();\n\n  function handleChange(evt) {\n    if (evt.target.name === 'name') setName(evt.target.value);\n    if (evt.target.name === 'number') setNumber(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n\n    const normalizedName = name.toLowerCase();\n\n    if (\n      items.some(el => el.name.toLowerCase() === normalizedName) ||\n      items.some(el => el.phone === number)\n    ) {\n      Notiflix.Notify.failure(`${name} is already in contacts`);\n\n      return;\n    }\n\n    const newContact = {\n      name: name,\n      number: number,\n    };\n\n    dispatch(addContactThunk(newContact)); // üíôüíõ –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –≤ createAsyncThunk –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ backend\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          // pattern=\"^[a-zA-Z–∞-—è–ê-–Ø]+(([' -][a-zA-Z–∞-—è–ê-–Ø ])?[a-zA-Z–∞-—è–ê-–Ø]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label className={css.label}>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button className={css.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactList_item__EZYHO\"};","import { useEffect } from 'react';\nimport css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { itemsSelector, listSelector } from 'redux/contacts/selectors';\nimport {\n  deleteContactThunk,\n  fetchContactsThunk,\n} from 'redux/contacts/operations';\nimport { setContactUpdate, setIsUpdate } from 'redux/contacts/slice';\n\nexport function ContactList() {\n  const items = useSelector(itemsSelector);\n  const filter = useSelector(listSelector);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  function getFiltered() {\n    const normalizedFilter = filter.toLowerCase();\n\n    return items.filter(el => el.name.toLowerCase().includes(normalizedFilter));\n  }\n\n  const handleContactUpdate = evt => {\n    const getContactId = evt.target.dataset.id;\n    const getContactUpdate = items.find(el => el.id === getContactId);\n\n    dispatch(setIsUpdate(true));\n    dispatch(setContactUpdate(getContactUpdate)); // –∑–∞–ø–∏—Å–∞–ª –≤ state –∏–∑ items\n  };\n\n  return (\n    <>\n      <ul>\n        {getFiltered().map(({ id, name, number }) => (\n          <li className={css.link} key={id}>\n            <div className={css.item}>\n              <p>\n                <span>{name}</span>\n                <span>: {number}</span>\n              </p>\n\n              <div>\n                <button onClick={() => dispatch(deleteContactThunk(id))}>\n                  Delete\n                </button>\n                <button onClick={handleContactUpdate} data-id={id}>\n                  Update\n                </button>\n              </div>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listSelector } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/slice';\n\nexport function Filter() {\n  const filter = useSelector(listSelector);\n  const dispatch = useDispatch();\n\n  function changeFilter(evt) {\n    dispatch(setFilter(evt.currentTarget.value));\n  }\n\n  return (\n    <label className={css.label}>\n      Find contacts by name\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={changeFilter}\n      />\n    </label>\n  );\n}\n","import styled from 'styled-components';\n\nexport const FormsContactsSt = styled.div`\n  display: flex;\n`;\n\nexport const FormSt = styled.form`\n  display: flex;\n  gap: 15px;\n`;\n\nexport const LabelSt = styled.label`\n  margin-top: 10px;\n`;\n\nexport const InputSt = styled.input`\n  margin-top: 5px;\n  display: block;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { patchContactThunk } from 'redux/contacts/operations';\nimport { contactUpdateSelector } from 'redux/contacts/selectors';\nimport { setContactUpdate, setIsUpdate } from 'redux/contacts/slice';\nimport { FormSt, InputSt, LabelSt } from './Styled';\n\nexport const UpdateForm = () => {\n  const dispatch = useDispatch();\n\n  const contactUpdate = useSelector(contactUpdateSelector);\n\n  // –∑–∞–ø–∏—Å—å –≤ —Å—Ç–µ–π—Ç –∏–∑ –ø–æ–ª—è input\n  const handleChange = evt => {\n    const inputName = evt.target.name;\n    const value = evt.target.value;\n\n    if (inputName === 'name')\n      dispatch(setContactUpdate({ ...contactUpdate, ...{ name: value } }));\n\n    if (inputName === 'number')\n      dispatch(setContactUpdate({ ...contactUpdate, ...{ number: value } }));\n  };\n\n  const handleContactCorrect = evt => {\n    evt.preventDefault();\n\n    dispatch(patchContactThunk(contactUpdate));\n    dispatch(setIsUpdate(false));\n  };\n\n  const { name, number } = contactUpdate;\n\n  return (\n    <>\n      <FormSt onSubmit={handleContactCorrect}>\n        <LabelSt>\n          Name update\n          <InputSt\n            type=\"text\"\n            name=\"name\"\n            placeholder={name}\n            onChange={handleChange}\n          />\n        </LabelSt>\n\n        <LabelSt>\n          Number update\n          <InputSt\n            type=\"tel\"\n            name=\"number\"\n            placeholder={number}\n            onChange={handleChange}\n          />\n        </LabelSt>\n\n        <button type=\"submit\">Correct contact</button>\n      </FormSt>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FormsContactsSt = styled.div`\n  display: flex;\n`;\n","import { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { UpdateForm } from 'components/UpdateForm/UpdateForm';\nimport { useSelector } from 'react-redux';\nimport { userSelector } from 'redux/auth/selectors';\nimport {\n  errorSelector,\n  isLoadingSelector,\n  isUpdateSelector,\n} from 'redux/contacts/selectors';\nimport { FormsContactsSt } from './Styled';\n\nconst Contacts = () => {\n  const user = useSelector(userSelector);\n  const isLoading = useSelector(isLoadingSelector);\n  const error = useSelector(errorSelector);\n  const isUpdate = useSelector(isUpdateSelector);\n\n  return (\n    <>\n      {isLoading && !error && <Loader />}\n      <h1>Phonebook</h1>\n      <p>React Hooks & Redux toolkit (async) & User registration and login</p>\n      <ContactForm />\n      <h2>{`${user.name}, these are your contacts`}</h2>\n      <FormsContactsSt>\n        <Filter />\n        {isUpdate && <UpdateForm />}\n      </FormsContactsSt>\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.1);\n  z-index: 1200;\n`;\n","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport { Backdrop } from './Styled';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst loaderRoot = document.querySelector('#loader-root');\n\nexport function Loader() {\n  return createPortal(\n    <Backdrop>\n      <ThreeDots\n        height=\"50\"\n        width=\"50\"\n        radius=\"9\"\n        color=\"gray\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </Backdrop>,\n    loaderRoot\n  );\n}\n"],"names":["itemsSelector","state","contacts","items","isLoadingSelector","isLoading","errorSelector","error","listSelector","filter","contactUpdateSelector","contactUpdate","isUpdateSelector","isUpdate","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","evt","target","value","className","css","onSubmit","preventDefault","normalizedName","toLowerCase","some","el","phone","Notiflix","newContact","addContactThunk","type","onChange","title","required","ContactList","useEffect","fetchContactsThunk","handleContactUpdate","getContactId","dataset","id","getContactUpdate","find","setIsUpdate","setContactUpdate","normalizedFilter","includes","getFiltered","map","onClick","deleteContactThunk","Filter","setFilter","currentTarget","FormSt","styled","LabelSt","InputSt","UpdateForm","inputName","patchContactThunk","placeholder","FormsContactsSt","user","userSelector","Loader","Backdrop","loaderRoot","document","querySelector","createPortal","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible"],"sourceRoot":""}